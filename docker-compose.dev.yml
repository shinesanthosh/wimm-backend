version: '3.8'

services:
  # WIMM Backend API - Development
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: wimm-api-dev
    restart: unless-stopped
    ports:
      - '3010:3010'
      - '9229:9229' # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3010
      - DB_SERVER=mysql
      - DB_USER=wimm_user
      - DB_PASSWORD=secure_password_change_me
      - DB_NAME=wimm
      - DB_PORT=3306
      - JWT_SECRET=development-jwt-secret-key-that-is-at-least-32-characters-long
      - JWT_EXPIRES_IN=24h
      - SALT_ROUNDS=12
      - LOG_LEVEL=debug
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./logs:/usr/src/app/logs
    networks:
      - wimm-network
    command: yarn dev

  # MySQL Database - Development
  mysql:
    image: mysql:8.0
    container_name: wimm-mysql-dev
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=wimm
      - MYSQL_USER=wimm_user
      - MYSQL_PASSWORD=secure_password_change_me
    ports:
      - '3306:3306'
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - wimm-network
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis - Development
  redis:
    image: redis:7-alpine
    container_name: wimm-redis-dev
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - wimm-network
    command: redis-server --appendonly yes

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  wimm-network:
    driver: bridge
